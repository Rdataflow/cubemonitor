name: Cube Monitor

on:
  workflow_dispatch:
  push:
  pull_request:
  schedule:
    - cron: '0 3 * * *'

jobs:
  monitor:
    name: Monitor endpoint 📍 ${{ matrix.endpoint }} - profile 📁 ${{ matrix.profile }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Packages 🧩
        run: npm install -g barnard59 barnard59-cube barnard59-shacl
      - name: Get list of Cubes 🧊
        run: |
          until `[ -s test.cubes.txt ]` ; do curl https://test.ld.admin.ch/query -s -X POST -H 'Accept: application/sparql-results+json' -H 'Content-Type: application/sparql-query' --data-binary @cubes.rq | jq -r '.results.bindings[].cube.value' > test.cubes.txt || sleep 2 ; done
          until `[ -s int.cubes.txt  ]` ; do curl https://int.ld.admin.ch/query -s -X POST -H 'Accept: application/sparql-results+json' -H 'Content-Type: application/sparql-query' --data-binary @cubes.rq | jq -r '.results.bindings[].cube.value' > int.cubes.txt || sleep 2 ; done
          until `[ -s prod.cubes.txt ]` ; do curl https://ld.admin.ch/query -s -X POST -H 'Accept: application/sparql-results+json' -H 'Content-Type: application/sparql-query' --data-binary @cubes.rq | jq -r '.results.bindings[].cube.value' > prod.cubes.txt || sleep 2 ; done
      - name: Validate Cube Metadata and Observations 🔎
        continue-on-error: true
        run: |
          ./checkmetadata.sh test && ./checkobservations.sh test && ./checkall.sh test
          ./checkmetadata.sh int  && ./checkobservations.sh int  && ./checkall.sh int
          ./checkmetadata.sh      && ./checkobservations.sh      && ./checkall.sh
          ./index.sh
          rm -f html_reports/*http*.html
      - name: Upload Pages artifact
        id: upload
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'html_reports'

  deploy:
    name: Deploy result
    needs: monitor
    runs-on: ubuntu-latest
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
